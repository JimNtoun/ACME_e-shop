#CREATE
create.table.customer=\
	CREATE TABLE CUSTOMER (\
		id INT PRIMARY KEY AUTO_INCREMENT, \
		firstName VARCHAR2(100) NOT NULL, \
		lastName VARCHAR2(100) NOT NULL, \
		email VARCHAR2(100) NOT NULL, \
		phone VARCHAR2(100) NOT NULL, \
		address VARCHAR2(100) NOT NULL, \
		city VARCHAR2(100) NOT NULL, \
		category ENUM('B2C', 'B2B', 'B2G') NOT NULL, \
        payment ENUM('Credit_Card', 'Wire_Transfer') NOT NULL,\
        order_id NOT NULL references ORDER(id)\
  )

create.table.product=\
	CREATE TABLE PRODUCT (\
        id NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY, \
		name VARCHAR2(100) NOT NULL, \
  		size VARCHAR2(100) NOT NULL, \
		price DECIMAL(10,2) NOT NULL ENABLE, \
		)
create.table.order=\
	CREATE TABLE ORDER (\
        id NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY, \
		salespersonName VARCHAR2(100) NOT NULL, \
        cost DECIMAL(10,2) NOT NULL,\
		)

create.table.orderItem=\
	CREATE TABLE ORDERITEM (\
        id NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1) PRIMARY KEY, \
		productName VARCHAR2(100) NOT NULL,\
        quantity INTEGER NOT NULL,\
        productCode VARCHAR2(100) NOT NULL,\
        productPrice DECIMAL(10,2) NOT NULL\
        order_id NOT NULL references ORDER(id)\
		)

#DROP
drop.table.customer=\
  DROP TABLE CUSTOMER PURGE
drop.table.product=\
  DROP TABLE PRODUCT PURGE
drop.table.order=\
  DROP TABLE ORDER PURGE
drop.table.orderItem=\
  DROP TABLE ORDERITEM PURGE

#SELECT
select.table.order.000=\
  SELECT * \
  FROM ORDER
select.table.order.001=\
  SELECT * \
  FROM ORDER \
  WHERE id = ?
select.table.customer.000=\
  SELECT * \
  FROM CUSTOMER
select.table.customer.001=\
  SELECT * \
  FROM CUSTOMER \
  WHERE order_id = ?
select.table.product.000=\
  SELECT * \
  FROM PRODUCT
select.table.product.001=\
  SELECT * \
  FROM PRODUCT \
  WHERE id = ?
select.table.orderItem.000=\
  SELECT * \
  FROM ORDERITEM
select.table.orderItem.001=\
  SELECT * \
  FROM ORDERITEM \
  WHERE id = ?


#INSERT
#INSERT INTO customers(FNAME, LNAME, EMAIL, PHONE, ADDRESS, CITY, CATEGORY)
#VALUES('Tom', 'Hanks', 'fff@gmail.com', '6980000001', '...', 'Athens', 'B2B');
#INSERT INTO customers(FNAME, LNAME, EMAIL, PHONE, ADDRESS, CITY, CATEGORY)
#VALUES('Bob', 'Marley', 'pg@gmail.com', '6980000002', '...', 'Athens', 'B2C');
#INSERT INTO customers(FNAME, LNAME, EMAIL, PHONE, ADDRESS, CITY, CATEGORY)
#VALUES('Ben', 'Affleck', 'sth@gmail.com', '6980000003', '...', 'Athens', 'B2G');

#INSERT INTO products(pname, price)
#VALUES('A', 30);
#INSERT INTO products(pname, price)
#VALUES('B', 40);
#INSERT INTO products(pname, price)
#VALUES('C', 50);
#INSERT INTO products(pname, price)
#VALUES('D', 100);
#INSERT INTO products(pname, price)
#VALUES('E', 10);
#INSERT INTO products(pname, price)
#VALUES('CC', 70);

#INSERT INTO orders(status, orderdate, payment, custid)
#VALUES('Pending', DATE '2022-07-27', 'Card', 3);
#INSERT INTO orders(status, orderdate, payment, custid)
#VALUES('Pending', DATE '2022-07-28', 'Cash', 1);
#INSERT INTO orders(status, orderdate, payment, custid)
#VALUES('Delivered', DATE '2022-07-28', 'Cash', 1);
#INSERT INTO orders(status, orderdate, payment, custid)
#VALUES('Pending', DATE '2022-07-28', 'Card', 2);

#INSERT INTO orderitems(orderid, pname, quantity)
#VALUES(1, 'B', 4);
#INSERT INTO orderitems(orderid, pname, quantity)
#VALUES(2, 'CC', 1);
#INSERT INTO orderitems(orderid, pname, quantity)
#VALUES(3, 'D', 2);
#INSERT INTO orderitems(orderid, pname, quantity)
#VALUES(4, 'B', 5);
#INSERT INTO orderitems(orderid, pname, quantity)
#VALUES(1, 'A', 6);
#INSERT INTO orderitems(orderid, pname, quantity)
#VALUES(2, 'C', 2);
#INSERT INTO orderitems(orderid, pname, quantity)
#VALUES(3, 'CC', 7);
#INSERT INTO orderitems(orderid, pname, quantity)
#VALUES(4, 'E', 5);

#Reports requested
#Total number and cost of purchases for a particular customer
select.table.000 = \
	SELECT SUM(orders.cost) AS total_cost,\
	COUNT(orders.id) AS total_purchases\
	FROM products, orders, orderitems, customers\
	WHERE (customers.id = ? AND customers.id = orders.custid \
	AND orders.id = orderitems.orderid\
	AND products.pname = orderitems.pname AND orders.status = 'Delivered')

#Total number and cost of purchases for a particular product
select.table.001 =\
	SELECT SUM(orders.cost) AS total_cost,\
	COUNT(orders.id) AS total_purchases\
	FROM products, orders, orderitems\
	WHERE (products.id = ? AND orders.id = orderitems.orderid\
	AND products.pname = orderitems.pname AND orders.status = 'Delivered')

#Total number and cost of purchases per customer
select.table.002 =\
	SELECT customers.id,\
	customers.fname AS first_name,\
	customers.lname AS last_name,\
	SUM(orders.cost) AS total_cost,\
	COUNT(orders.id) AS total_purchases\
	FROM products, orders, orderitems, customers\
	WHERE (customers.id = orders.custid AND orders.id = orderitems.orderid\
	AND products.pname = orderitems.pname AND orders.status = 'Delivered')\
	GROUP BY customers.id, customers.fname, customers.lname\
	ORDER BY customers.id

#Total number and cost of purchases per customer category
select.table.003 =\
	SELECT customers.category,\
	SUM(orders.cost) AS total_cost,\
	COUNT(orders.id) AS total_purchases\
	FROM products, orders, orderitems, customers\
	WHERE (customers.id = orders.custid AND customers.id = customers.id\
	AND orders.id = orderitems.orderid\
	AND products.pname = orderitems.pname AND orders.status = 'Delivered')\
	GROUP BY customers.category

#Total number and cost of purchases per payment method
select.table.004 = \
	SELECT orders.payment,\
	SUM(orders.cost) AS total_cost,\
	COUNT(orders.id) AS total_purchases\
	FROM products, orders, orderitems, customers\
	WHERE (customers.id = orders.custid AND customers.id = customers.id\
	AND orders.id = orderitems.orderid\
	AND products.pname = orderitems.pname AND orders.status = 'Delivered')\
	GROUP BY orders.payment

#Average order cost
select.table.005 = \
	SELECT AVG(cost) AS average_order_cost\
	FROM orders\
	WHERE status = 'Delivered'

#Average order cost per customer
select.table.006 = \
	SELECT customers.id,\
	customers.fname AS first_name,\
	customers.lname AS last_name,\
	AVG(orders.cost) AS average_order_cost\
	FROM products, orders, orderitems, customers\
	WHERE (customers.id = orders.custid AND orders.id = orderitems.orderid\
	AND products.pname = orderitems.pname AND orders.status = 'Delivered')\
	GROUP BY customers.id, customers.fname, customers.lname\
	ORDER BY customers.id

#The customer(s) who purchased the most expensive product and how many times
select.table.007 = \
	SELECT customers.id,\
	customers.fname AS first_name,\
	customers.lname AS last_name,\
	SUM(orderitems.quantity) AS total_products_bought\
	FROM products, orders, orderitems, customers\
	WHERE (customers.id = orders.custid AND orders.id = orderitems.orderid\
	AND products.price = (SELECT DISTINCT MAX(price) FROM products)\
	AND products.pname = orderitems.pname AND orders.status = 'Delivered')\
	GROUP BY customers.id, customers.fname, customers.lname\
	ORDER BY customers.id

#IMPORTANT!!!
#1	column COST of ORDERS needs update method for when an order is made
#2	{COUNT(orders.id) AS total_purchases} can be replaced by
#	{SUM(orderitems.quantity) AS total_products_bought}...needs discussion
#3	orders.status = 'Delivered' maybe needs STRCOMP instead


